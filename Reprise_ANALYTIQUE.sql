USE REPRISE_HRU
GO

--Reprise de l'analytique

--Source HRU IMPUTATIONANALYTIQUE destination CVENTIL, CVENTILENTETE,CSECTION et axe

--Attention la reprie par ASC de la table CVENTIL n'est pas autorisée dans l'application de Paie. On devra passer par un fichier d'import VEN

DECLARE

--CSECTION
@VAR_CSP_SIREN varchar(35),
@VAR_CSP_AXE char(2),
@VAR_CSP_SOUSPLAN char(2),
@VAR_CSP_SECTION varchar(17),
@VAR_CSP_LIBELLE varchar(35),
@VAR_CSP_ABREGE varchar(35),
@VAR_TEST_SECTION_EXISTE char(1),

--CVENTIL
@VAR_CVE_SIREN char(35),
@VAR_CVE_CODE varchar(17),
@VAR_CVE_AXE char(2),
@VAR_CVE_TAUXMONTANT varchar(255),
@VAR_CVE_TAUXQTE1 float,
@VAR_CVE_TAUXQTE2 float,
@VAR_CVE_NUMEROVENTIL int,
@VAR_CVE_MONTANT float,
@VAR_CVE_SOUSPLAN1 varchar(17),
@VAR_CVE_SOUSPLAN2 varchar(17),
@VAR_CVE_SOUSPLAN3 varchar(17),
@VAR_CVE_SOUSPLAN4 varchar(17),
@VAR_CVE_SOUSPLAN5 varchar(17),
@VAR_CVE_SOUSPLAN6 varchar(17),
@VAR_CVE_TYPE char(3),
@VAR_MATRICULE_HRU varchar(10),
@VAR_CEMP varchar(10),
@VAR_SIREN varchar(35),
@VAR_MATRICULE_HRS varchar(10),
@VAR_LIGNE_EN_COURS_IMPUTATION int,
@VAR_TOTAL_LIGNE_IMPUTATION int,
@VAR_LONGUEUR_AXE1 int,
@VAR_LONGUEUR_AXE2 int,
@VAR_LONGUEUR_AXE3 int,
@VAR_LONGUEUR_AXE4 int,
@VAR_LONGUEUR_AXE5 int,
@VAR_LONGUEUR_TOTAL int,
@VAR_AXE1_AXE2_LONGEUR int,
@VAR_MULTI_AXE char(1),

--AXE
@VAR_X_SIREN varchar(35),
@VAR_X_AXE char(2),
@VAR_X_LIBELLE char (35),
@VAR_X_COMPTABLE char(1),
@VAR_X_CHANTIER char(1),
@VAR_X_MODEREOUVERTURE char(1),
@VAR_X_SECTIONATTENTE char (17),
@VAR_X_REGLESAISIE varchar(35),
@VAR_X_ABREGE char(17),
@VAR_X_LONGSECTION int,
@VAR_X_BOURREANA char(1),
@VAR_X_SOCIETE char(3),
@VAR_X_STRUCTURE char(1),
@VAR_X_GENEATTENTE varchar(17),
@VAR_X_CPESTRUCT char(1),
@VAR_X_FERME char(1),
@VAR_X_SAISIETRANCHE char(1),
@VAR_TEST_AXE_EXISTE int;

SELECT @VAR_LIGNE_EN_COURS_IMPUTATION=MIN(IMPUTATIONANALYTIQUE_LIGNE) FROM IMPUTATIONANALYTIQUE;
SELECT @VAR_TOTAL_LIGNE_IMPUTATION=MAX(IMPUTATIONANALYTIQUE_LIGNE) FROM IMPUTATIONANALYTIQUE;

SET @VAR_CVE_TYPE='SAL';
SET @VAR_X_COMPTABLE='X';
SET @VAR_X_CHANTIER='-';
SET @VAR_X_STRUCTURE='-';
SET @VAR_X_FERME='-';
SET @VAR_X_SAISIETRANCHE='-';
SET @VAR_X_BOURREANA='0';
SET @VAR_CSP_SOUSPLAN='S1';

WHILE @VAR_LIGNE_EN_COURS_IMPUTATION<@VAR_TOTAL_LIGNE_IMPUTATION

BEGIN

SELECT @VAR_MATRICULE_HRU=MATRI FROM IMPUTATIONANALYTIQUE WHERE IMPUTATIONANALYTIQUE_LIGNE=@VAR_LIGNE_EN_COURS_IMPUTATION;--récupération matricule HRU
SELECT @VAR_CEMP=CEMP FROM IMPUTATIONANALYTIQUE WHERE IMPUTATIONANALYTIQUE_LIGNE=@VAR_LIGNE_EN_COURS_IMPUTATION;--récupération du code société
SELECT @VAR_MATRICULE_HRS=IND_MATRICULEHRS FROM VENTILATION_INDIVIDUS WHERE IND_MATRICULEHRU=@VAR_MATRICULE_HRU AND IND_CEMP=@VAR_CEMP;--récupération du code matricule HRS
SET @VAR_CVE_CODE=@VAR_MATRICULE_HRS;
SELECT @VAR_SIREN=IND_SIREN FROM VENTILATION_INDIVIDUS WHERE IND_MATRICULEHRS=@VAR_MATRICULE_HRS AND IND_CEMP=@VAR_CEMP;--récupération du SIREN
SET @VAR_CVE_SIREN=@VAR_SIREN;
SET @VAR_X_SIREN=@VAR_SIREN;
SET @VAR_CSP_SIREN=@VAR_SIREN;

SET @VAR_CVE_NUMEROVENTIL=1;

SET @VAR_CVE_TAUXMONTANT='100,00';

SELECT @VAR_MULTI_AXE=PAR_VALEUR FROM PARAMETRES WHERE PAR_NOM='MULTI_AXE';

Print 'Multi axe = '+@VAR_MULTI_AXE

SELECT @VAR_LONGUEUR_AXE1=CAST(PAR_VALEUR AS INT) FROM PARAMETRES WHERE PAR_NOM='AXE_1';
SELECT @VAR_LONGUEUR_AXE2=CAST(PAR_VALEUR AS INT)  FROM PARAMETRES WHERE PAR_NOM='AXE_2';
SELECT @VAR_LONGUEUR_AXE3=CAST(PAR_VALEUR AS INT)  FROM PARAMETRES WHERE PAR_NOM='AXE_3';
SELECT @VAR_LONGUEUR_AXE4=CAST(PAR_VALEUR AS INT)  FROM PARAMETRES WHERE PAR_NOM='AXE_4';
SELECT @VAR_LONGUEUR_AXE5=CAST(PAR_VALEUR AS INT)  FROM PARAMETRES WHERE PAR_NOM='AXE_5';

SET @VAR_LONGUEUR_TOTAL=@VAR_LONGUEUR_AXE1+@VAR_LONGUEUR_AXE2+@VAR_LONGUEUR_AXE3+@VAR_LONGUEUR_AXE4+@VAR_LONGUEUR_AXE5;--longueur total de la section
SET @VAR_AXE1_AXE2_LONGEUR=@VAR_LONGUEUR_AXE1+@VAR_LONGUEUR_AXE2;

PRINT 'Longueur axe 1 '+CAST(@VAR_LONGUEUR_AXE1 AS varchar(255))
PRINT 'Longueur axe 2 '+CAST(@VAR_LONGUEUR_AXE2 AS varchar(255))
PRINT 'Longueur axe 3 '+CAST(@VAR_LONGUEUR_AXE3 AS varchar(255))
PRINT 'Longueur axe 4 '+CAST(@VAR_LONGUEUR_AXE4 AS varchar(255))
PRINT 'Longueur axe 5 '+CAST(@VAR_LONGUEUR_AXE4 AS varchar(255))

IF @VAR_MULTI_AXE='-' --si un axe analytique 

	BEGIN

	SELECT @VAR_CVE_SOUSPLAN1=IMP01 FROM IMPUTATIONANALYTIQUE WHERE IMPUTATIONANALYTIQUE_LIGNE=@VAR_LIGNE_EN_COURS_IMPUTATION;

	INSERT HR_SPRINT_CVENTIL
	VALUES (@VAR_CVE_SIREN,@VAR_CVE_CODE,@VAR_CVE_AXE,@VAR_CVE_TAUXMONTANT,@VAR_CVE_TAUXQTE1,@VAR_CVE_TAUXQTE2,@VAR_CVE_NUMEROVENTIL,@VAR_CVE_MONTANT,@VAR_CVE_SOUSPLAN1,@VAR_CVE_SOUSPLAN2,@VAR_CVE_SOUSPLAN3,@VAR_CVE_SOUSPLAN4,
	@VAR_CVE_SOUSPLAN5,@VAR_CVE_SOUSPLAN6,@VAR_CVE_TYPE);
	
	END


IF @VAR_MULTI_AXE='X' --si plusieurs axe analytique 

	BEGIN
	
	IF @VAR_LONGUEUR_AXE1>0

		BEGIN

		--Gestion de la table CVENTIL

		SELECT @VAR_CVE_SOUSPLAN1=LEFT(IMP01,@VAR_LONGUEUR_AXE1) FROM IMPUTATIONANALYTIQUE WHERE IMPUTATIONANALYTIQUE_LIGNE=@VAR_LIGNE_EN_COURS_IMPUTATION; 
		SET @VAR_CVE_AXE='A1'; 
		
		INSERT HR_SPRINT_CVENTIL
		VALUES (@VAR_CVE_SIREN,@VAR_CVE_CODE,@VAR_CVE_AXE,@VAR_CVE_TAUXMONTANT,@VAR_CVE_TAUXQTE1,@VAR_CVE_TAUXQTE2,@VAR_CVE_NUMEROVENTIL,@VAR_CVE_MONTANT,@VAR_CVE_SOUSPLAN1,@VAR_CVE_SOUSPLAN2,@VAR_CVE_SOUSPLAN3,@VAR_CVE_SOUSPLAN4,
		@VAR_CVE_SOUSPLAN5,@VAR_CVE_SOUSPLAN6,@VAR_CVE_TYPE);

		--Gestion de la table AXE

		SET @VAR_X_AXE='A1'; 
		SET @VAR_X_LIBELLE='Reprise FRH A1';
		SET @VAR_X_ABREGE=@VAR_X_LIBELLE;
		SET @VAR_X_SECTIONATTENTE='ZZZZZZ';

		SELECT @VAR_TEST_AXE_EXISTE=COUNT(*) FROM HR_SPRINT_AXE WHERE X_AXE=@VAR_X_AXE AND X_SIREN=@VAR_X_SIREN;--test si la ligne existe déjà

		IF @VAR_TEST_AXE_EXISTE=0

			BEGIN

			INSERT INTO HR_SPRINT_AXE
			VALUES (@VAR_X_SIREN,@VAR_X_AXE,@VAR_X_LIBELLE,@VAR_X_COMPTABLE,@VAR_X_CHANTIER,@VAR_X_MODEREOUVERTURE,@VAR_X_SECTIONATTENTE,@VAR_X_REGLESAISIE,@VAR_X_ABREGE,
			@VAR_X_LONGSECTION,@VAR_X_BOURREANA,@VAR_X_SOCIETE,@VAR_X_STRUCTURE,@VAR_X_GENEATTENTE,@VAR_X_CPESTRUCT,@VAR_X_FERME,@VAR_X_SAISIETRANCHE);

			PRINT 'Création de l axe A1'

			END

		IF @VAR_TEST_AXE_EXISTE=1

			BEGIN

			PRINT 'L axe A1 existe déjà'

			END

		--Gestion de la table CSECTION

		SET @VAR_CSP_SECTION=@VAR_CVE_SOUSPLAN1;--récupération du code section
		SET @VAR_CSP_AXE=@VAR_X_AXE;
		SET @VAR_CSP_ABREGE=@VAR_CSP_SECTION;
		SET @VAR_CSP_LIBELLE=@VAR_CSP_ABREGE;

		SELECT @VAR_TEST_SECTION_EXISTE=COUNT(*) FROM HR_SPRINT_CSECTION WHERE CSP_AXE=@VAR_CSP_AXE AND CSP_SIREN=@VAR_CSP_SIREN AND CSP_SECTION=@VAR_CSP_SECTION;
		
		IF @VAR_TEST_SECTION_EXISTE=0

			BEGIN

			INSERT INTO HR_SPRINT_CSECTION
			VALUES (@VAR_CSP_SIREN,@VAR_CSP_AXE,@VAR_CSP_SOUSPLAN,@VAR_CSP_SECTION,@VAR_CSP_ABREGE,@VAR_CSP_LIBELLE);

			Print 'Création d une section analytique'


			END

		IF @VAR_TEST_SECTION_EXISTE=1

			BEGIN

			Print 'La section existe déjà'

			END

					   			 
		PRINT 'Le matricule '+@VAR_MATRICULE_HRS+'est ventilé sur l axe 1 ' +@VAR_CVE_SOUSPLAN1


		END

	IF @VAR_LONGUEUR_AXE2>0

		BEGIN

		--Gestion de la table CVENTIL


		SELECT @VAR_CVE_SOUSPLAN1=RIGHT(LEFT(IMP01,@VAR_AXE1_AXE2_LONGEUR),@VAR_LONGUEUR_AXE2) FROM IMPUTATIONANALYTIQUE WHERE IMPUTATIONANALYTIQUE_LIGNE=@VAR_LIGNE_EN_COURS_IMPUTATION; 
		SET @VAR_CVE_AXE='A2'; 
		
		INSERT HR_SPRINT_CVENTIL
		VALUES (@VAR_CVE_SIREN,@VAR_CVE_CODE,@VAR_CVE_AXE,@VAR_CVE_TAUXMONTANT,@VAR_CVE_TAUXQTE1,@VAR_CVE_TAUXQTE2,@VAR_CVE_NUMEROVENTIL,@VAR_CVE_MONTANT,@VAR_CVE_SOUSPLAN1,@VAR_CVE_SOUSPLAN2,@VAR_CVE_SOUSPLAN3,@VAR_CVE_SOUSPLAN4,
		@VAR_CVE_SOUSPLAN5,@VAR_CVE_SOUSPLAN6,@VAR_CVE_TYPE);

		--Gestion de la table AXE

		SET @VAR_X_AXE='A2'; 
		SET @VAR_X_LIBELLE='Reprise FRH A2';
		SET @VAR_X_ABREGE=@VAR_X_LIBELLE;
		SET @VAR_X_SECTIONATTENTE='ZZZZZZ';

		SELECT @VAR_TEST_AXE_EXISTE=COUNT(*) FROM HR_SPRINT_AXE WHERE X_AXE=@VAR_X_AXE AND X_SIREN=@VAR_X_SIREN;--test si la ligne existe déjà

		IF @VAR_TEST_AXE_EXISTE=0

			BEGIN

			INSERT INTO HR_SPRINT_AXE
			VALUES (@VAR_X_SIREN,@VAR_X_AXE,@VAR_X_LIBELLE,@VAR_X_COMPTABLE,@VAR_X_CHANTIER,@VAR_X_MODEREOUVERTURE,@VAR_X_SECTIONATTENTE,@VAR_X_REGLESAISIE,@VAR_X_ABREGE,
			@VAR_X_LONGSECTION,@VAR_X_BOURREANA,@VAR_X_SOCIETE,@VAR_X_STRUCTURE,@VAR_X_GENEATTENTE,@VAR_X_CPESTRUCT,@VAR_X_FERME,@VAR_X_SAISIETRANCHE);

			PRINT 'Création de l axe A2'

			END

		IF @VAR_TEST_AXE_EXISTE=1

			BEGIN

			PRINT 'L axe A2 existe déjà'

			END

		--Gestion de la table CSECTION

		SET @VAR_CSP_SECTION=@VAR_CVE_SOUSPLAN1;--récupération du code section
		SET @VAR_CSP_AXE=@VAR_X_AXE;
		SET @VAR_CSP_ABREGE=@VAR_CSP_SECTION;
		SET @VAR_CSP_LIBELLE=@VAR_CSP_ABREGE;

		SELECT @VAR_TEST_SECTION_EXISTE=COUNT(*) FROM HR_SPRINT_CSECTION WHERE CSP_AXE=@VAR_CSP_AXE AND CSP_SIREN=@VAR_CSP_SIREN AND CSP_SECTION=@VAR_CSP_SECTION;
		
		IF @VAR_TEST_SECTION_EXISTE=0

			BEGIN

			INSERT INTO HR_SPRINT_CSECTION
			VALUES (@VAR_CSP_SIREN,@VAR_CSP_AXE,@VAR_CSP_SOUSPLAN,@VAR_CSP_SECTION,@VAR_CSP_ABREGE,@VAR_CSP_LIBELLE);

			Print 'Création d une section analytique'


			END

		IF @VAR_TEST_SECTION_EXISTE=1

			BEGIN

			Print 'La section existe déjà'

			END


		PRINT 'Le matricule '+@VAR_MATRICULE_HRS+'est ventilé sur l axe 2 ' +@VAR_CVE_SOUSPLAN1

		END

	IF @VAR_LONGUEUR_AXE3>0
	
		BEGIN

		SELECT @VAR_CVE_SOUSPLAN1=RIGHT(IMP01,@VAR_LONGUEUR_AXE3) FROM IMPUTATIONANALYTIQUE WHERE IMPUTATIONANALYTIQUE_LIGNE=@VAR_LIGNE_EN_COURS_IMPUTATION; 
		SET @VAR_CVE_AXE='A3'; 
		
		INSERT HR_SPRINT_CVENTIL
		VALUES (@VAR_CVE_SIREN,@VAR_CVE_CODE,@VAR_CVE_AXE,@VAR_CVE_TAUXMONTANT,@VAR_CVE_TAUXQTE1,@VAR_CVE_TAUXQTE2,@VAR_CVE_NUMEROVENTIL,@VAR_CVE_MONTANT,@VAR_CVE_SOUSPLAN1,@VAR_CVE_SOUSPLAN2,@VAR_CVE_SOUSPLAN3,@VAR_CVE_SOUSPLAN4,
		@VAR_CVE_SOUSPLAN5,@VAR_CVE_SOUSPLAN6,@VAR_CVE_TYPE);

		--Gestion de la table AXE

		SET @VAR_X_AXE='A3'; 
		SET @VAR_X_LIBELLE='Reprise FRH A3';
		SET @VAR_X_ABREGE=@VAR_X_LIBELLE;
		SET @VAR_X_SECTIONATTENTE='ZZZZZZ';

		SELECT @VAR_TEST_AXE_EXISTE=COUNT(*) FROM HR_SPRINT_AXE WHERE X_AXE=@VAR_X_AXE AND X_SIREN=@VAR_X_SIREN;--test si la ligne existe déjà

		IF @VAR_TEST_AXE_EXISTE=0

			BEGIN

			INSERT INTO HR_SPRINT_AXE
			VALUES (@VAR_X_SIREN,@VAR_X_AXE,@VAR_X_LIBELLE,@VAR_X_COMPTABLE,@VAR_X_CHANTIER,@VAR_X_MODEREOUVERTURE,@VAR_X_SECTIONATTENTE,@VAR_X_REGLESAISIE,@VAR_X_ABREGE,
			@VAR_X_LONGSECTION,@VAR_X_BOURREANA,@VAR_X_SOCIETE,@VAR_X_STRUCTURE,@VAR_X_GENEATTENTE,@VAR_X_CPESTRUCT,@VAR_X_FERME,@VAR_X_SAISIETRANCHE);

			PRINT 'Création de l axe A3'

			END

		IF @VAR_TEST_AXE_EXISTE=1

			BEGIN

			PRINT 'L axe A3 existe déjà'

			END

		--Gestion de la table CSECTION

		SET @VAR_CSP_SECTION=@VAR_CVE_SOUSPLAN1;--récupération du code section
		SET @VAR_CSP_AXE=@VAR_X_AXE;
		SET @VAR_CSP_ABREGE=@VAR_CSP_SECTION;
		SET @VAR_CSP_LIBELLE=@VAR_CSP_ABREGE;

		SELECT @VAR_TEST_SECTION_EXISTE=COUNT(*) FROM HR_SPRINT_CSECTION WHERE CSP_AXE=@VAR_CSP_AXE AND CSP_SIREN=@VAR_CSP_SIREN AND CSP_SECTION=@VAR_CSP_SECTION;
		
		IF @VAR_TEST_SECTION_EXISTE=0

			BEGIN

			INSERT INTO HR_SPRINT_CSECTION
			VALUES (@VAR_CSP_SIREN,@VAR_CSP_AXE,@VAR_CSP_SOUSPLAN,@VAR_CSP_SECTION,@VAR_CSP_ABREGE,@VAR_CSP_LIBELLE);

			Print 'Création d une section analytique'


			END

		IF @VAR_TEST_SECTION_EXISTE=1

			BEGIN

			Print 'La section existe déjà'

			END

		PRINT 'Le matricule '+@VAR_MATRICULE_HRS+'est ventilé sur l axe 3 ' +@VAR_CVE_SOUSPLAN1

		END
		
	END


UPDATE VENTILATION_INDIVIDUS SET IND_STATUS='Etape Analytique', IND_REPRISE_HR_SPRINT_CVENTIL='X',IND_REPRISE_HR_SPRINT_CVENTILENTETE='X' WHERE IND_MATRICULEHRU=@VAR_MATRICULE_HRU AND IND_SIREN=@VAR_SIREN;

SET @VAR_LIGNE_EN_COURS_IMPUTATION=@VAR_LIGNE_EN_COURS_IMPUTATION+1;

END

Go

DECLARE

@VAR_VEN_SIREN varchar(35),
@VAR_VEN_TYPE char(3),
@VAR_VEN_CODE varchar(10),
@VAR_VEN_AXE char(2),
@VAR_VEN_SOUSPLAN char(2),
@VAR_VEN_SECTION varchar(17),
@VAR_VEN_POURCENTAGE varchar(255),
@VAR_VEN_NUMEROVENTILATION int;

SET @VAR_VEN_TYPE='VEN';
SET @VAR_VEN_SOUSPLAN='S1';

DECLARE VENTILATION_ANALYTIQUE_cursor CURSOR FOR

SELECT CVE_SIREN,CVE_CODE,CVE_AXE,CVE_SOUSPLAN1,CVE_TAUXMONTANT,CVE_NUMEROVENTIL FROM HR_SPRINT_CVENTIL

OPEN  VENTILATION_ANALYTIQUE_cursor;

FETCH NEXT FROM VENTILATION_ANALYTIQUE_cursor
INTO @VAR_VEN_SIREN,@VAR_VEN_CODE,@VAR_VEN_AXE,@VAR_VEN_SECTION,@VAR_VEN_POURCENTAGE,@VAR_VEN_NUMEROVENTILATION;

WHILE @@FETCH_STATUS = 0

BEGIN

INSERT INTO HR_SPRINT_REPRISEVENTILATIONANALYTIQUE
VALUES (@VAR_VEN_SIREN,@VAR_VEN_TYPE,@VAR_VEN_CODE,@VAR_VEN_AXE,@VAR_VEN_SOUSPLAN,@VAR_VEN_SECTION,@VAR_VEN_POURCENTAGE,@VAR_VEN_NUMEROVENTILATION);

FETCH NEXT FROM VENTILATION_ANALYTIQUE_cursor
INTO @VAR_VEN_SIREN,@VAR_VEN_CODE,@VAR_VEN_AXE,@VAR_VEN_SECTION,@VAR_VEN_POURCENTAGE,@VAR_VEN_NUMEROVENTILATION;


END

CLOSE VENTILATION_ANALYTIQUE_cursor;  
DEALLOCATE VENTILATION_ANALYTIQUE_cursor;  
GO  

Print 'Fin reprise analytique'
