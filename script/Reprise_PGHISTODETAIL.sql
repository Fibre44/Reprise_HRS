USE REPRISE_HRU
GO

--Reprise PGHISTODETAIL

--les données sont dans VALIDCONTRAT on ne reprendra que certaines zones libellé emploi, salaires de base,coefficient,horaire mensuel

DECLARE

@VAR_PHD_SIREN varchar(35),
@VAR_PHD_SALARIE varchar(10),
@VAR_PHD_ETABLISSEMENT char(3),
@VAR_PHD_PGINFOSMODIF varchar(35),
@VAR_PHD_PGTYPEHISTO char(3),
@VAR_PHD_NEWVALEUR_EMPLOI varchar(35),
@VAR_PHD_NEWVALEUR_SALAIREMOIS1 varchar(35),
@VAR_PHD_TYPEVALEUR char(1),--Envoyer T pour les libellés d'emploi
@VAR_PHD_TABLETTE varchar(35),
@VAR_PHD_PGTYPEINFOLS char(3),
@VAR_PHD_DATEAPPLIC datetime,
@VAR_PHD_TRAITEMENTOK char(1),
@VAR_PHD_CODTABL char(1),
@VAR_PHD_CODEPOP char(1),
@VAR_PHD_POPULATION char(1),
@VAR_VALIDCONTRAT_LIGNE_EN_COURS int,
@VAR_VALIDCONTRAT_TOTAL_LIGNES int,
@VAR_SALARIE_LIGNE_EN_COURS int,
@VAR_MATRICULE_HRS varchar(10),
@VAR_MATRICULE_HRU varchar(10),
@VAR_CEMP_SALARIE char(5),
@VAR_INDIVIDUS_LIGNE_EN_COURS int,
@VAR_INDIVIDUS_TOTAL int,
@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE varchar(35),
@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_VALEUR_SUIVANTE varchar(35),
@VAR_SIREN_RECHERCHE_EMPLOI varchar(35),
@VAR_LIBELLE_EMPLOI_PARTAGE char(1),
@VAR_VALEUR_COEFFICIENT_VALIDCONTRAT_ORIGINE varchar(35),
@VAR_VALEUR_COEFFICIENT_VALIDCONTRAT_VALEUR_SUIVANTE varchar(35),
@VAR_VALEUR_HORAIRE_BASE_VALIDCONTRAT_ORIGINE varchar(35),
@VAR_VALEUR_MSM_ORIGINE varchar(255),
@VAR_VALEUR_MSM_SUIVANT varchar(255),
@VAR_SALARIE_LIGNE_SUIVANTE int,
@VAR_CMATR_LIGNE varchar(10),
@VAR_CEMP_LIGNE varchar(10),
@VAR_PREMIERE_LIGNE_SALARIE int;

SET @VAR_PHD_TRAITEMENTOK='X';
SET @VAR_PHD_PGTYPEINFOLS='SAL';
SET @VAR_PHD_CODTABL='';
SET @VAR_PHD_ETABLISSEMENT='';

SELECT @VAR_INDIVIDUS_LIGNE_EN_COURS=MIN(IND_LIGNE) FROM VENTILATION_INDIVIDUS;
SELECT @VAR_INDIVIDUS_TOTAL=MAX(IND_LIGNE) FROM VENTILATION_INDIVIDUS;
SELECT @VAR_LIBELLE_EMPLOI_PARTAGE=PAR_VALEUR FROM PARAMETRES WHERE PAR_NOM='Partage PLE';

IF @VAR_LIBELLE_EMPLOI_PARTAGE='X'
BEGIN
	SET @VAR_SIREN_RECHERCHE_EMPLOI='999999999'
END
ELSE
BEGIN
	SET @VAR_SIREN_RECHERCHE_EMPLOI=@VAR_PHD_SIREN
END


WHILE @VAR_INDIVIDUS_LIGNE_EN_COURS<@VAR_INDIVIDUS_TOTAL--boucle par salariés

BEGIN

SELECT
@VAR_MATRICULE_HRU=IND_MATRICULEHRU,--récupération du matricule HRU
@VAR_CEMP_SALARIE=IND_CEMP,--récupération du code société
@VAR_PHD_SALARIE=IND_MATRICULEHRS,--récupération du matricule HRS
@VAR_PHD_SIREN=IND_SIREN--récupération du SIREN
FROM VENTILATION_INDIVIDUS
WHERE IND_LIGNE=@VAR_INDIVIDUS_LIGNE_EN_COURS;

SELECT @VAR_VALIDCONTRAT_TOTAL_LIGNES=MAX(VALIDCONTRAT_LIGNE) FROM VALIDCONTRAT WHERE MATRI=@VAR_MATRICULE_HRU AND CEMP=@VAR_CEMP_SALARIE;--récupération des lignes du salariés sur sa société
SELECT @VAR_SALARIE_LIGNE_EN_COURS=MIN(VALIDCONTRAT_LIGNE) FROM VALIDCONTRAT WHERE MATRI=@VAR_MATRICULE_HRU AND CEMP=@VAR_CEMP_SALARIE;

Print 'Salarié en cours '+@VAR_PHD_SALARIE+' individus '+CAST(@VAR_INDIVIDUS_LIGNE_EN_COURS AS varchar(255))+'/'+CAST(@VAR_INDIVIDUS_TOTAL AS varchar(255))+' société du salarié '+@VAR_CEMP_SALARIE+' matricule HRU'+@VAR_MATRICULE_HRU
Print 'Le salarié a '+CAST(@VAR_VALIDCONTRAT_TOTAL_LIGNES AS varchar(255))+' contrat(s)'

WHILE @VAR_SALARIE_LIGNE_EN_COURS<=@VAR_VALIDCONTRAT_TOTAL_LIGNES--Boucle dans VALIDCONTRAT sur le salarié en cours

	BEGIN

	Print 'Traitement du contrat '+CAST(@VAR_SALARIE_LIGNE_EN_COURS AS varchar(255))+'/'+CAST(@VAR_VALIDCONTRAT_TOTAL_LIGNES AS varchar(255))

	SELECT @VAR_PREMIERE_LIGNE_SALARIE=MIN(VALIDCONTRAT_LIGNE) FROM VALIDCONTRAT WHERE MATRI=@VAR_MATRICULE_HRU;--récupération du numéro de la première ligne du salarié dans la table
	
	--Initialisation des premieres valeurs 

	IF @VAR_SALARIE_LIGNE_EN_COURS=@VAR_PREMIERE_LIGNE_SALARIE --si on est sur la premère ligne on initialise les valeurs

		BEGIN

		--Gestion du libellé d'emploi
		
		SELECT @VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE=LQUAL FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération de la valeur d'origine
		SELECT @VAR_PHD_NEWVALEUR_EMPLOI=TRA_VALEURHRS FROM TRANSCO WHERE TRA_VALEURHRU=@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE AND TRA_SIREN=@VAR_SIREN_RECHERCHE_EMPLOI;--récupération de la valeur HRS sur la société en cours
		SET @VAR_PHD_PGTYPEHISTO='001';
		SET @VAR_PHD_PGINFOSMODIF='PSA_LIBELLEEMPLOI';
		SET @VAR_PHD_TYPEVALEUR='T';
		SET @VAR_PHD_TABLETTE='PGLIBEMPLOI';
		SET @VAR_PHD_CODEPOP='';
		SET @VAR_PHD_POPULATION='';
		SELECT @VAR_PHD_DATEAPPLIC=CAST(DVCTR AS datetime) FROM VALIDCONTRAT  WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération de la date d'origine

		Print 'Initialisation de la première valeur libellé emploi'+@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE+' code '+@VAR_PHD_NEWVALEUR_EMPLOI+' avec la date '+CAST(@VAR_PHD_DATEAPPLIC AS varchar(255))

		INSERT INTO HR_SPRINT_PGHISTODETAIL
		VALUES (@VAR_PHD_SIREN,@VAR_PHD_SALARIE,@VAR_PHD_ETABLISSEMENT,@VAR_PHD_PGINFOSMODIF,@VAR_PHD_PGTYPEHISTO,@VAR_PHD_NEWVALEUR_EMPLOI,@VAR_PHD_TYPEVALEUR,@VAR_PHD_TABLETTE,@VAR_PHD_PGTYPEINFOLS,@VAR_PHD_DATEAPPLIC,
		@VAR_PHD_TRAITEMENTOK,@VAR_PHD_CODTABL,@VAR_PHD_CODEPOP,@VAR_PHD_POPULATION);


		--Gestion du salaire de base

		SELECT @VAR_VALEUR_MSM_ORIGINE=CAST(MSM AS varchar(255)) FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération de la valeur d'origine
		
		SET @VAR_PHD_NEWVALEUR_SALAIREMOIS1=@VAR_VALEUR_MSM_ORIGINE;--récupération du nouveau salaire de base
		SET @VAR_PHD_PGTYPEHISTO='003';
		SET @VAR_PHD_PGINFOSMODIF='PSA_SALAIREMOIS1';
		SET @VAR_PHD_TYPEVALEUR='F';
		SET @VAR_PHD_TABLETTE='';
		SET @VAR_PHD_CODEPOP='';
		SET @VAR_PHD_POPULATION='';

		SELECT @VAR_PHD_DATEAPPLIC=CAST(DVCTR AS datetime) FROM VALIDCONTRAT  WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération de la date du changement

		Print 'Initialisation du premier salarie de base'+CAST(@VAR_VALEUR_MSM_ORIGINE AS varchar(255))+' avec la date '+CAST(@VAR_PHD_DATEAPPLIC AS varchar(255))


		INSERT INTO HR_SPRINT_PGHISTODETAIL
		VALUES (@VAR_PHD_SIREN,@VAR_PHD_SALARIE,@VAR_PHD_ETABLISSEMENT,@VAR_PHD_PGINFOSMODIF,@VAR_PHD_PGTYPEHISTO,@VAR_PHD_NEWVALEUR_SALAIREMOIS1,@VAR_PHD_TYPEVALEUR,@VAR_PHD_TABLETTE,@VAR_PHD_PGTYPEINFOLS,@VAR_PHD_DATEAPPLIC,
		@VAR_PHD_TRAITEMENTOK,@VAR_PHD_CODTABL,@VAR_PHD_CODEPOP,@VAR_PHD_POPULATION);

		END --fin de test de la première ligne

	--Pour les contrats suivants comparatif entre la valeur M et la valeur M+1 et ajout de la valeur M+1 si différent

	SET @VAR_SALARIE_LIGNE_SUIVANTE=@VAR_SALARIE_LIGNE_EN_COURS+1;--numéro de la ligne suivante pour récupérer la valeur +1 pour la comparaison

	IF @VAR_SALARIE_LIGNE_SUIVANTE>@VAR_VALIDCONTRAT_TOTAL_LIGNES--controle que la ligne suivante ne dépasse pas la dernière ligne du salarié

	BEGIN
		SET @VAR_SALARIE_LIGNE_SUIVANTE=@VAR_SALARIE_LIGNE_SUIVANTE-1;
	END

	SELECT @VAR_CMATR_LIGNE=MATRI FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération du matricule de la ligne pour controle
	SELECT @VAR_CEMP_LIGNE=CEMP FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS; --récupération du CEMP pour controle


	IF @VAR_CMATR_LIGNE=@VAR_MATRICULE_HRU AND @VAR_CEMP_LIGNE=@VAR_CEMP_SALARIE  --si la ligne en cours est sur le bon salarié et la bonne société
	
	BEGIN

		--Gestion du libellé d'emploi

	SELECT @VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE=LQUAL FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération de la valeur d'origine
	SELECT @VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_VALEUR_SUIVANTE=LQUAL FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_SUIVANTE;--récupération de la valeur +1

	Print 'La valeur du libellé d emploi d origine est '+@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE+' la valeur +1 est ' +@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_VALEUR_SUIVANTE
		
	IF @VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_ORIGINE<>@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_VALEUR_SUIVANTE --si valeur différente 
		BEGIN
				
		SELECT @VAR_PHD_NEWVALEUR_EMPLOI=TRA_VALEURHRS FROM TRANSCO WHERE TRA_VALEURHRU=@VAR_VALEUR_LIBELLE_EMPLOI_VALIDCONTRAT_VALEUR_SUIVANTE AND TRA_SIREN=@VAR_SIREN_RECHERCHE_EMPLOI;--récupération de la valeur HRS sur la société en cours
		SET @VAR_PHD_PGTYPEHISTO='001';
		SET @VAR_PHD_PGINFOSMODIF='PSA_LIBELLEEMPLOI';
		SET @VAR_PHD_TYPEVALEUR='T';
		SET @VAR_PHD_TABLETTE='PGLIBEMPLOI';
		SET @VAR_PHD_CODEPOP='';
		SET @VAR_PHD_POPULATION='';
		SELECT @VAR_PHD_DATEAPPLIC=CAST(DVCTR AS datetime) FROM VALIDCONTRAT  WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_SUIVANTE;--récupération de la date du changement
					   
		Print 'Insertion du libellé d emploi '+CAST(@VAR_PHD_NEWVALEUR_EMPLOI AS varchar(3))+' à la date du '+CAST(@VAR_PHD_DATEAPPLIC AS varchar(255))

		INSERT INTO HR_SPRINT_PGHISTODETAIL
		VALUES (@VAR_PHD_SIREN,@VAR_PHD_SALARIE,@VAR_PHD_ETABLISSEMENT,@VAR_PHD_PGINFOSMODIF,@VAR_PHD_PGTYPEHISTO,@VAR_PHD_NEWVALEUR_EMPLOI,@VAR_PHD_TYPEVALEUR,@VAR_PHD_TABLETTE,@VAR_PHD_PGTYPEINFOLS,@VAR_PHD_DATEAPPLIC,
		@VAR_PHD_TRAITEMENTOK,@VAR_PHD_CODTABL,@VAR_PHD_CODEPOP,@VAR_PHD_POPULATION);
						
		END

	--Gestion du salaie de base
		
	SELECT @VAR_VALEUR_MSM_ORIGINE=CAST(MSM AS varchar(255)) FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_EN_COURS;--récupération de la valeur d'origine
	SELECT @VAR_VALEUR_MSM_SUIVANT=CAST(MSM AS varchar(255)) FROM VALIDCONTRAT WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_SUIVANTE;--récupération de la valeur suivante

	Print 'Le salaire de base d origine est '+@VAR_VALEUR_MSM_ORIGINE+' la valeur +1 est '+@VAR_VALEUR_MSM_SUIVANT

	IF @VAR_VALEUR_MSM_ORIGINE<>@VAR_VALEUR_MSM_SUIVANT

		BEGIN

		SET @VAR_PHD_NEWVALEUR_SALAIREMOIS1=@VAR_VALEUR_MSM_SUIVANT;--récupération du nouveau salaire de base
		SET @VAR_PHD_PGINFOSMODIF='PSA_SALAIREMOIS1';
		SET @VAR_PHD_TYPEVALEUR='F';
		SET @VAR_PHD_TABLETTE='';
		SET @VAR_PHD_CODEPOP='';
		SET @VAR_PHD_POPULATION='';
		SET @VAR_PHD_PGTYPEHISTO='003';

		SELECT @VAR_PHD_DATEAPPLIC=CAST(DVCTR AS datetime) FROM VALIDCONTRAT  WHERE VALIDCONTRAT_LIGNE=@VAR_SALARIE_LIGNE_SUIVANTE;--récupération de la date du changement

		Print 'Insertion du nouveau salaire de base '+CAST(@VAR_PHD_NEWVALEUR_SALAIREMOIS1 as varchar(255))+' à la date du '+CAST(@VAR_PHD_DATEAPPLIC AS varchar(255))

		INSERT INTO HR_SPRINT_PGHISTODETAIL
		VALUES (@VAR_PHD_SIREN,@VAR_PHD_SALARIE,@VAR_PHD_ETABLISSEMENT,@VAR_PHD_PGINFOSMODIF,@VAR_PHD_PGTYPEHISTO,@VAR_PHD_NEWVALEUR_SALAIREMOIS1,@VAR_PHD_TYPEVALEUR,@VAR_PHD_TABLETTE,@VAR_PHD_PGTYPEINFOLS,@VAR_PHD_DATEAPPLIC,
		@VAR_PHD_TRAITEMENTOK,@VAR_PHD_CODTABL,@VAR_PHD_CODEPOP,@VAR_PHD_POPULATION);

		END

			----------------------------------------------------------------------------------------------------------
			--Fin du traitement de la ligne en cours
	
	Print 'Fin de traitement du salarié'

	SET @VAR_SALARIE_LIGNE_EN_COURS=@VAR_SALARIE_LIGNE_EN_COURS+1;--incrémentation du compteur boucle contrats salariés
		
	END

	ELSE --si pas de modification

		BEGIN
					
		SET @VAR_SALARIE_LIGNE_EN_COURS=@VAR_SALARIE_LIGNE_EN_COURS+1;--incrémentation du compteur boucle contrats salariés
		
		Print 'Passage ligne suivante'

		END
	
	END


UPDATE VENTILATION_INDIVIDUS SET IND_STATUS='Etape PGHISTODETAIL', IND_REPRISE_HR_SPRINT_PGHISTODETAIL='X' WHERE IND_MATRICULEHRU=@VAR_MATRICULE_HRU AND IND_SIREN=@VAR_PHD_SIREN;

SET @VAR_INDIVIDUS_LIGNE_EN_COURS=@VAR_INDIVIDUS_LIGNE_EN_COURS+1;--incrémentation du compteur

END

DELETE HR_SPRINT_PGHISTODETAIL WHERE PHD_NEWVALEUR='';--la colonne MSM peut etre à vide et le script alimente la table.

GO

PRINT 'Fin reprise PGHISTODETAIL'